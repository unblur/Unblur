{
  "openapi": "3.0.0",
  "servers": [
    {
      "description": "Development Server",
      "url": "https://unblur-final.azurewebsites.net/api"
    }
  ],
  "info": {
    "description": "This is a simple API",
    "version": "1.0.0",
    "title": "Unblur API",
    "contact": {
      "email": "xavier.velez@stonybrook.edu"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "Users",
      "description": "User related calls"
    },
    {
      "name": "Artworks",
      "description": "Artwork related calls"
    },
    {
      "name": "Transactions",
      "description": "Transaction related calls"
    }
  ],
  "paths": {
    "/Users/register": {
      "post": {
        "tags": ["Users", "Transactions", "Artworks"],
        "summary": "Register new user",
        "operationId": "registerUser",
        "description": "Register new user if user does not already exist",
        "responses": {
          "201": {
            "description": "Returned on successful registration of Users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "12345abcdef"
                      },
                      "email": {
                        "type": "string",
                        "example": "anyperson@anysite.com"
                      },
                      "message": {
                        "type": "string",
                        "example": "Successfully registered. Please verify your email to log in."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Please enter all fields"
          },
          "401": {
            "description": "User already exists"
          },
          "402": {
            "description": "Invalid user data"
          },
          "500": {
            "description": "Server error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["email", "password"],
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "anyperson@anysite.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "password123"
                    }
                  }
                }
              }
            }
          },
          "description": "New user to register"
        }
      }
    },
    "/Users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "Login user",
        "operationId": "loginUser",
        "description": "Login user after authenticating user information",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["email", "password"],
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "anyperson@anysite.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "password123"
                    }
                  }
                }
              }
            }
          },
          "description": "User to attempt to login"
        },
        "responses": {
          "200": {
            "description": "Returned on successful login of User",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "12345abcdef"
                      },
                      "email": {
                        "type": "string",
                        "example": "anyperson@anysite.com"
                      },
                      "token": {
                        "type": "string",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "User does not exist"
          },
          "401": {
            "description": "User not verified"
          },
          "402": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/Users/verifyEmail": {
      "get": {
        "tags": ["Users"],
        "summary": "Gets a user's verification status",
        "description": "Checks for a User's existance and then checks their verification status",
        "operationId": "verifyEmail",
        "responses": {
          "200": {
            "description": "Returned on successful verification of User",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Succesfully verified email."
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Returned if User has previously been verified",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "User has been already verified. Please login."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "No email verification requested"
          },
          "401": {
            "description": "User not found"
          },
          "402": {
            "description": "Invalid or expired verify email token"
          },
          "500": {
            "description": "Error verifying email"
          }
        }
      }
    },
    "/Users/verifyEmailRequest": {
      "post": {
        "tags": ["Users"],
        "summary": "Request email verification",
        "operationId": "verifyEmailRequest",
        "description": "Create a verify email request to make sure that the user has entered a valid email",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["email"],
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "anyperson@anysite.com"
                    }
                  }
                }
              }
            }
          },
          "description": "User email to send verification request to"
        },
        "responses": {
          "200": {
            "description": "Returned when an email is successfully sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Successfully sent email."
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Returned if User has previously been verified",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "User has been already verified. Please login."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error."
          }
        }
      }
    },
    "/Users": {
      "get": {
        "tags": ["Users"],
        "summary": "Gets all users",
        "description": "Gets all current existing users",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "Successful return of all Users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/Users/self": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user data",
        "description": "Get the current User's info",
        "operationId": "getSelf",
        "responses": {
          "200": {
            "description": "An object of User info",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "12345abcdef"
                      },
                      "email": {
                        "type": "string",
                        "example": "anyperson@anysite.com"
                      },
                      "wallet": {
                        "$ref": "#/components/schemas/Wallets"
                      },
                      "artworkIDs": {
                        "type": "string",
                        "example": "12345abcdef"
                      },
                      "transactionIDs": {
                        "type": "string",
                        "example": "12345abcdef"
                      },
                      "profilePicture": {
                        "type": "string",
                        "example": "https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png"
                      },
                      "profileDescription": {
                        "type": "string",
                        "example": "This is an example of a profile description."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Users/resetPasswordRequest": {
      "post": {
        "tags": ["Users"],
        "summary": "Create a password reset request",
        "description": "Creates a password reset request for when a user loses access to their account",
        "operationId": "resetPasswordRequest",
        "responses": {
          "200": {
            "description": "Returned when an email is successfully sent to reset password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Successfully sent email."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "User doesn't exists"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/Users/resetPassword": {
      "post": {
        "tags": ["Users"],
        "summary": "Create a password reset request",
        "description": "Creates a password reset request for when a user loses access to their account",
        "operationId": "resetPassword",
        "responses": {
          "200": {
            "description": "Returned when an email is successfully sent to reset password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Successfully reset password."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "No password reset requested"
          },
          "401": {
            "description": "Invalid or expired reset password token"
          }
        }
      }
    },
    "/getTransactions": {
      "post": {
        "tags": ["Transactions"],
        "summary": "Get all transactions",
        "description": "Gets all current transactions that are stored in the databse",
        "operationId": "getTransactions",
        "responses": {
          "200": {
            "description": "An array of transaction objects as modeled below",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          }
        }
      }
    },
    "/artworks": {
      "post": {
        "tags": ["Artworks"],
        "summary": "Get all artworks in the database",
        "description": "Get all current artwork that are stored in the databse",
        "operationId": "getArtworks",
        "responses": {
          "200": {
            "description": "An array of transaction objects as modeled below",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Artwork"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "anyperson@anysite.com"
          },
          "password": {
            "type": "string",
            "example": "password123"
          },
          "verified": {
            "type": "boolean",
            "default": false,
            "example": false
          },
          "wallets": {
            "$ref": "#/components/schemas/Wallets"
          }
        },
        "description": "An object representing **User** of the website and the information that is linked to them."
      },
      "Wallets": {
        "type": "object",
        "properties": {
          "walletID": {
            "type": "string"
          },
          "walletName": {
            "type": "string"
          }
        }
      },
      "Artwork": {
        "type": "object",
        "required": ["creatorID", "image", "algosToUnblur"],
        "properties": {
          "creatorID": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000."
          },
          "image": {
            "type": "string",
            "example": "https://cdn.pixabay.com/photo/2015/10/05/22/37/sample-image.png"
          },
          "algosToUnblur": {
            "type": "number",
            "default": 43,
            "example": 43
          },
          "dateUnblurred": {
            "type": "string",
            "format": "date-time",
            "example": "2022-02-02T02:22:22Z"
          },
          "commentIDs": {
            "type": "array",
            "format": "uuid",
            "example": ["123e4567-e89b-12d3-a456-426614174000"]
          },
          "transasctionIDs": {
            "type": "array",
            "format": "uuid",
            "example": ["123e4567-e89b-12d3-a456-426614174000"]
          }
        },
        "description": "An object representing **Artwork** that was uploaded and the information that is linked to it."
      },
      "Comment": {
        "type": "object",
        "required": ["userID", "content"],
        "properties": {
          "userID": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000."
          },
          "content": {
            "type": "string",
            "example": "This picture sucks dude"
          }
        },
        "description": "An object representing **Comment** that was left on an uploaded piece of artwork"
      },
      "Transaction": {
        "type": "object",
        "required": ["donatorID", "receiverID", "algos", "artworkID"],
        "properties": {
          "donatorID": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000."
          },
          "receiverID": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000."
          },
          "algos": {
            "type": "number",
            "default": 43,
            "example": 43
          },
          "artworkID": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000."
          }
        },
        "description": "An object representing **Transaction** that represents the transfer of a donation to a creator from a user"
      },
      "verifyEmailToken": {
        "type": "object",
        "required": ["userID", "token"],
        "properties": {
          "userID": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000."
          },
          "token": {
            "type": "string",
            "format": "jwtToken"
          }
        },
        "description": "An object representing **Verification Email** that is used to make sure users are linked to valid email accounts"
      }
    }
  }
}
